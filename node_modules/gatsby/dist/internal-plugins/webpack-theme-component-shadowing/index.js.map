{"version":3,"sources":["../../../src/internal-plugins/webpack-theme-component-shadowing/index.js"],"names":["path","require","debug","fs","_","module","exports","GatsbyThemeComponentShadowingResolverPlugin","constructor","projectRoot","themes","apply","resolver","plugin","request","callback","allMatchingThemes","filter","name","includes","join","matchingThemes","uniq","length","Error","theme","split","component","context","issuer","issuerExtension","extname","slice","endsWith","doResolve","builtComponentPath","resolveComponentPath","matchingTheme","ogThemes","t","cache","resolve","concat","Array","from","reverse","map","aTheme","dirname","dir","find","possibleComponentPath","readdirSync","e","exists","filepath","ext","filenameWithoutExtension","basename"],"mappings":"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","sourcesContent":["const path = require(`path`)\nconst debug = require(`debug`)(`gatsby:component-shadowing`)\nconst fs = require(`fs`)\nconst _ = require(`lodash`)\n\nmodule.exports = class GatsbyThemeComponentShadowingResolverPlugin {\n  cache = {}\n\n  constructor({ projectRoot, themes }) {\n    debug(`themes list`, themes)\n    this.themes = themes\n    this.projectRoot = projectRoot\n  }\n\n  apply(resolver) {\n    resolver.plugin(`relative`, (request, callback) => {\n      // find out which theme's src/components dir we're requiring from\n      const allMatchingThemes = this.themes.filter(name =>\n        request.path.includes(path.join(name, `src`))\n      )\n\n      // The same theme can be included twice in the themes list causing multiple\n      // matches. This case should only be counted as a single match for that theme.\n      const matchingThemes = _.uniq(allMatchingThemes)\n\n      // 0 matching themes happens a lot for paths we don't want to handle\n      // > 1 matching theme means we have a path like\n      //   `gatsby-theme-blog/src/components/gatsby-theme-something/src/components`\n      if (matchingThemes.length > 1) {\n        throw new Error(\n          `Gatsby can't differentiate between themes ${matchingThemes.join(\n            ` and `\n          )} for path ${request.path}`\n        )\n      }\n      if (matchingThemes.length !== 1) {\n        return callback()\n      }\n      // theme is the theme package from which we're requiring the relative component\n      const [theme] = matchingThemes\n      // get the location of the component relative to src/\n      const [, component] = request.path.split(path.join(theme, `src`))\n\n      /**\n       * if someone adds\n       * ```\n       * modules: [path.resolve(__dirname, 'src'), 'node_modules'],\n       * ```\n       * to the webpack config, `issuer` is `null`, so we skip this check.\n       * note that it's probably a bad idea in general to set `modules`\n       * like this in a theme, but we also shouldn't artificially break\n       * people that do.\n       */\n      if (request.context.issuer) {\n        const issuerExtension = path.extname(request.context.issuer)\n\n        if (\n          request.context.issuer\n            .slice(0, -issuerExtension.length)\n            .endsWith(component)\n        ) {\n          return resolver.doResolve(\n            `describedRelative`,\n            request,\n            null,\n            {},\n            callback\n          )\n        }\n      }\n      const builtComponentPath = this.resolveComponentPath({\n        matchingTheme: theme,\n        themes: this.themes,\n        component,\n        projectRoot: this.projectRoot,\n      })\n\n      return resolver.doResolve(\n        `describedRelative`,\n        { ...request, path: builtComponentPath || request.path },\n        null,\n        {},\n        callback\n      )\n    })\n  }\n\n  // check the cache, the user's project, and finally the theme files\n  resolveComponentPath({\n    matchingTheme: theme,\n    themes: ogThemes,\n    component,\n    projectRoot,\n  }) {\n    // don't include matching theme in possible shadowing paths\n    const themes = ogThemes.filter(t => t !== theme)\n    if (!this.cache[`${theme}-${component}`]) {\n      this.cache[`${theme}-${component}`] = [\n        path.join(path.resolve(`.`), `src`, theme),\n      ]\n        .concat(\n          Array.from(themes)\n            .reverse()\n            .map(aTheme =>\n              path.join(path.dirname(require.resolve(aTheme)), `src`, theme)\n            )\n        )\n        .map(dir => path.join(dir, component))\n        .find(possibleComponentPath => {\n          debug(`possibleComponentPath`, possibleComponentPath)\n          let dir\n          try {\n            // we use fs/path instead of require.resolve to work with\n            // TypeScript and alternate syntaxes\n            dir = fs.readdirSync(path.dirname(possibleComponentPath))\n          } catch (e) {\n            return false\n          }\n          const exists = dir\n            .map(filepath => {\n              const ext = path.extname(filepath)\n              const filenameWithoutExtension = path.basename(filepath, ext)\n              return filenameWithoutExtension\n            })\n            .includes(\n              path.basename(\n                possibleComponentPath,\n                path.extname(possibleComponentPath)\n              )\n            )\n          return exists\n        })\n    }\n\n    return this.cache[`${theme}-${component}`]\n  }\n}\n"],"file":"index.js"}