{"version":3,"sources":["../../src/utils/detect-port-in-use-and-prompt.js"],"names":["detect","require","report","detectPortInUseAndPrompt","port","rlInterface","callback","newPort","err","_port","panic","question","answer","length","match","module","exports"],"mappings":";;AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAE,aAAF,CAAtB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAE,yBAAF,CAAtB,C,CAEA;AACA;;;AACA,MAAME,wBAAwB,GAAG,CAACC,IAAD,EAAOC,WAAP,EAAoBC,QAApB,KAAiC;AAChE,MAAIC,OAAO,GAAGH,IAAd;AAEAJ,EAAAA,MAAM,CAACI,IAAD,EAAO,CAACI,GAAD,EAAMC,KAAN,KAAgB;AAC3B,QAAID,GAAJ,EAAS;AACPN,MAAAA,MAAM,CAACQ,KAAP,CAAaF,GAAb;AACD;;AAED,QAAIJ,IAAI,KAAKK,KAAb,EAAoB;AAClB;AACA,YAAME,QAAQ,GAAI,wCAAuCP,IAAK,kEAA9D;AAEAC,MAAAA,WAAW,CAACM,QAAZ,CAAqBA,QAArB,EAA+BC,MAAM,IAAI;AACvC,YAAIA,MAAM,CAACC,MAAP,KAAkB,CAAlB,IAAuBD,MAAM,CAACE,KAAP,CAAa,UAAb,CAA3B,EAAqD;AACnDP,UAAAA,OAAO,GAAGE,KAAV;AACD;;AACDH,QAAAA,QAAQ,CAACC,OAAD,CAAR;AACD,OALD;AAMD,KAVD,MAUO;AACLD,MAAAA,QAAQ,CAACC,OAAD,CAAR;AACD;AACF,GAlBK,CAAN;AAmBD,CAtBD;;AAwBAQ,MAAM,CAACC,OAAP,GAAiBb,wBAAjB","sourcesContent":["const detect = require(`detect-port`)\nconst report = require(`gatsby-cli/lib/reporter`)\n\n// Checks if a port is in use and prompts the user to enter another one\n// Then calls callback with new port\nconst detectPortInUseAndPrompt = (port, rlInterface, callback) => {\n  let newPort = port\n\n  detect(port, (err, _port) => {\n    if (err) {\n      report.panic(err)\n    }\n\n    if (port !== _port) {\n      // eslint-disable-next-line max-len\n      const question = `Something is already running at port ${port} \\nWould you like to run the app at another port instead? [Y/n] `\n\n      rlInterface.question(question, answer => {\n        if (answer.length === 0 || answer.match(/^yes|y$/i)) {\n          newPort = _port\n        }\n        callback(newPort)\n      })\n    } else {\n      callback(newPort)\n    }\n  })\n}\n\nmodule.exports = detectPortInUseAndPrompt\n"],"file":"detect-port-in-use-and-prompt.js"}